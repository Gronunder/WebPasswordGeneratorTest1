---
 - name:  provisioning EC2 instances using Ansible
   hosts: localhost
   connection: local
   gather_facts: true
   tags: provisioning

   vars:
     keypair: VTestKey
     instance_name: WebServer2
     instance_type: t2.small
     instance_tag: 
     name: WebServer
     image: ami-0eb260c4d5475b901  # Basic AWSUbuntu EC2 Image from the AMI store
     wait: yes
     group: webserver
     count: 1
     region: eu-west-2  # This is the LONDON region used for testing
     security_group: TestSecurityGroup-V
     vpc_subnet_id: subnet-3cb07f70  # Change this to your desired subnet ID
   
   tasks:
     - name: Task # 2 Launch the new EC2 Instance
       community.aws.ec2_instance:  # Updated to 'community.aws.ec2_instance'
         key_name: "{{ keypair }}"
         instance_type: "{{ instance_type }}"
         image_id: "{{ image }}"
         security_groups: "{{ security_group }}"
         count: "{{ count }}"
         region: "{{ region }}"
         wait: "{{ wait }}"
         subnet_id: "{{ vpc_subnet_id }}"
       register: ec2

     - name: Tag EC2 instance
       amazon.aws.ec2_tag:
        region: "{{ region }}"
        resource: "{{ ec2.instance_ids[0] }}"
        state: present
        tags:
          Name: "{{ instance_name }}"

     - name: Add new EC2 to host/group
       ansible.builtin.add_host:
        name: "{{ ec2.instances[0].public_dns_name }}"
        groups: webserver11
        instance_id: "{{ ec2.instances[0].id }}"

     - name: Update package cache on Ubuntu
       become: yes
       ansible.builtin.apt:
        update_cache: yes  # This performs 'apt update'

     - name: Install apache httpd on Ubuntu
       hosts: webserver1
       become: yes
       ansible.builtin.apt:
         name: apache2  # On Ubuntu, it's apache2, not httpd
         state: present

     - name: Ensure httpd service is started and enabled
       hosts: webserver1
       become: yes
       ansible.builtin.service:
        name: apache2
        state: started
        enabled: yes

     - name: change directory to the html directory
       hosts: webserver1
       shell: cd /var/www/html

     - name: Retrieve HTML file from GitHub
       hosts: webserver1
       get_url:
        url: https://github.com/Gronunder/WebPasswordGeneratorTest1/blob/main/HTML/PassGen.html
        dest: /var/www/html/index.html
        mode: '0644'

     - name: Set ownership and permissions
       hosts: webserver1
       file:
        path: /var/www/html
        owner: www-data
        group: www-data
        mode: '0755'

     - name: Restart Apache service
       hosts: webserver1
       service:
        name: apache2
        state: restarted

     - name: start apache server, if not started
       hosts: webserver1
       ansible.builtin.service:
        enabled: yes
        name: apache2
        state: started

     - name: Print message indicating Apache has been restarted
       hosts: webserver1
       debug:
        msg: "Apache has been restarted."  
