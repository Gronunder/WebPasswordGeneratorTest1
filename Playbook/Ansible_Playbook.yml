---
- name: Provisioning EC2 instances using Ansible
  hosts: localhost
  connection: local
  gather_facts: False
  tags: provisioning

  vars:
    keypair: VTestKey
    Instance_name: WebServer2
    instance_type: t2.small
    instance_tag: 
      name: WebServer
    image: ami-07dc0b5cad2999c28  # Basic AWS EC2 Image from the AMI store
    wait: yes
    group: webserver
    count: 1
    region: eu-west-2  # This is the LONDON region used for testing
    security_group: TestSecurityGroup-V
    vpc_subnet_id: subnet-3cb07f70  # Change this to your desired subnet ID

  tasks:
    - name: Task #2 Launch the new EC2 Instance
      community.aws.ec2_instance:  # Updated to 'community.aws.ec2_instance'
        key_name: "{{ keypair }}"
        instance_type: "{{ instance_type }}"
        image_id: "{{ image }}"
        security_groups: "{{ security_group }}"
        count: "{{ count }}"
        region: "{{ region }}"
        wait: "{{ wait }}"
        subnet_id: "{{ vpc_subnet_id }}"
      register: ec2

    # Updated Task: Install Apache (httpd)
    - name: Install apache httpd
      ansible.builtin.service:  # Using yum package manager for AWS Linux
        name: httpd
        state: present
      vars:
        ansible_python_interpreter: /usr/bin/python3  # Specify Python 3 interpreter path  

    # Updated Task: Ensure httpd service is started and enabled
    - name: Ensure httpd service is started and enabled
      ansible.builtin.service:  # Using ansible.builtin.service module
        name: httpd  # Updated to 'httpd' for AWS Linux
        state: latest
        enabled: true

    - name: Change directory to the html directory
      become: yes
      shell: cd /var/www/html

    # Updated Task: Retrieve HTML file from GitHub with correct URL
    - name: Retrieve HTML file from GitHub
      get_url:
        url: https://raw.githubusercontent.com/Gronunder/WebPasswordGeneratorTest1/main/HTML/PassGen.html
        dest: /var/www/html/index.html
        mode: '0644'

    # Updated Task: Set ownership and permissions on index.html
    - name: Set ownership and permissions on index.html
      file:
        path: /var/www/html/index.html
        owner: apache  # Updated to 'apache' for AWS Linux
        group: apache  # Updated to 'apache' for AWS Linux
        mode: '0644'

    # Updated Task: Restart Apache service
    - name: Restart Apache service
      ansible.builtin.service:  # Using ansible.builtin.service module
        name: httpd  # Updated to 'httpd' for AWS Linux
        state: restarted

    - name: Print message indicating Apache has been restarted
      debug:
        msg: "Apache has been restarted."
